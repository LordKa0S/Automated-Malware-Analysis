import vboxapi
from time import time
SOURCE_PATH = r"/var/www/html/uploads/test.bat"
DEST_PATH = r"C:\asach\test.bat"
CHECK = r"/home/siesgst/Downloads/test.txt"
UNAME = "SSSK"
PASSWD = "finalyear"
MACH_NAME = "MAWIN7"
virtualBoxManager = vboxapi.VirtualBoxManager(None, None)
try:
    vbox = virtualBoxManager.getVirtualBox()
    todo = vbox.findMachine(MACH_NAME)
    alreadyRunning = todo.state is not virtualBoxManager.constants.MachineState_PoweredOff
    print("Machine", "started" if alreadyRunning else "starting")
    session = virtualBoxManager.getSessionObject(vbox)
    if not alreadyRunning:
        progress = todo.launchVMProcess(session, "headless", None)
    else:
        todo.lockMachine(session, virtualBoxManager.constants.LockType_Shared)
    try:
        if not alreadyRunning:
            progress.waitForCompletion(-1)
            if progress.resultCode is not 0:
                raise Exception("Machine failed to start: ",
                                progress.errorInfo.text)
        print("Machine locked")
        start = time()
        while session.console.guest.additionsRunLevel is not virtualBoxManager.constants.AdditionsRunLevelType_Userland and time() - start < 180:
            pass
        if not time() - start < 180:
            raise Exception("OS took too long to load")
        print("OS loaded in ", time() - start, "sec")
        runner = session.console.guest.createSession(UNAME, PASSWD, None, None)
        try:
            runner.waitFor(
                virtualBoxManager.constants.GuestSessionWaitForFlag_Start, 30 * 1000)
            if runner.status is not virtualBoxManager.constants.GuestSessionStatus_Started:
                raise Exception(
                    "Guest session did not start after ", 30, " sec")
            snapcreate=todo.takeSnapshot("firstsnapshot","tochecksnapshotworking",False)
            if snapcreate.operationPercent() ==0:
              		print('Could not take snapshot')
            else:
              	print('Snapshot Taken')
        except Exception as err:
            print(str(err))
        finally:
            runner.close()
            session.console.powerButton()
    except Exception as err:
        print(str(err))
    finally:
        session.unlockMachine()
finally:
    print('Done')